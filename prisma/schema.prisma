// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quote {
  id      String   @id @default(uuid())
  authors Person[]
  key     String?
  sources Source[]
  content String   @map("text")
  notes   String?
}

model Person {
  id                 String    @id @default(uuid())
  name               String
  shortName          String?
  yearBorn           String?
  yearDied           String?
  quotes             Quote[]
  texts              Text[]
  fictional          Boolean   @default(false)
  notes              String?
  bio                String?
  editionsAuthored   Edition[] @relation("EditionAuthors")
  editionsTranslated Edition[] @relation("EditionTranslators")
  editionsEdited     Edition[] @relation("EditionEditors")
}

enum TextType {
  BOOK
  ARTICLE
  SPEECH
  LETTER
  BLOG_POST
  SOCIAL_MEDIA_POST
  INTERVIEW
  ESSAY
}

model Text {
  id       String    @id @default(uuid())
  authors  Person[]
  editions Edition[]
  subtitle String?
  title    String
  type     TextType?
  year     String?
  sources  Source[]
  notes    String?
}

model Source {
  id        String     @id @default(uuid())
  citations Citation[]
  quote     Quote      @relation(fields: [quoteId], references: [id], onDelete: Cascade)
  text      Text       @relation(fields: [textId], references: [id], onDelete: Cascade)
  primary   Boolean?
  quoteId   String
  textId    String
}

model Citation {
  id        String  @id @default(uuid())
  source    Source  @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  edition   Edition @relation(fields: [editionId], references: [id], onDelete: Cascade)
  // Representing pages as JSON; consult Prisma documentation for your specific needs
  sourceId  String
  editionId String
}

enum EditionType {
  PAPERBACK
  HARDCOVER
  LEATHERBOUND
  WEBSITE
  PDF
  VIDEO_RECORDING
  AUDIO_RECORDING
}

model Edition {
  id          String       @id @default(uuid())
  publisher   Publisher?   @relation(fields: [publisherId], references: [id])
  subtitle    String?
  texts       Text[]
  title       String
  type        EditionType?
  url         String?
  year        String?
  citations   Citation[]
  publisherId String?
  notes       String?
  authors     Person[]     @relation("EditionAuthors")
  translators Person[]     @relation("EditionTranslators")
  editors     Person[]     @relation("EditionEditors")
}

model Publisher {
  id       String    @id @default(uuid())
  name     String
  location String?
  url      String?
  notes    String?
  editions Edition[]
}
